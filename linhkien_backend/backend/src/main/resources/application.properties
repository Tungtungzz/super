# Server port (c?ng mà Spring Boot ch?y, m?c ??nh là 8080)
server.port=8080

# C?u hình DataSource - Thông tin k?t n?i MySQL Database
spring.datasource.url=jdbc:mysql://localhost:3306/my_database?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Pdtung982

# C?u hình JPA (Hibernate)
# spring.jpa.hibernate.ddl-auto: Cách Hibernate t??ng tác v?i schema c?a database
#   - update: C?p nh?t schema (thêm/s?a c?t) d?a trên các Entity. D? li?u không b? m?t. (Th??ng dùng cho phát tri?n)
#   - create: T?o m?i schema m?i khi ?ng d?ng kh?i ??ng. D? li?u c? b? m?t.
#   - create-drop: T?o m?i và xóa khi ?ng d?ng d?ng.
#   - none: Không làm gì v?i schema. Ph?i qu?n lý schema th? công (cho môi tr??ng s?n xu?t).
spring.jpa.hibernate.ddl-auto=update

# spring.jpa.show-sql: Hi?n th? các câu l?nh SQL mà Hibernate t?o ra trong console
spring.jpa.show-sql=true

# spring.jpa.properties.hibernate.dialect: Ch?n dialect phù h?p v?i phiên b?n MySQL c?a b?n
#   - org.hibernate.dialect.MySQL8Dialect (cho MySQL 8.x tr? lên)
#   - org.hibernate.dialect.MySQL5Dialect (cho MySQL 5.x)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# C?u hình CORS (Cross-Origin Resource Sharing)
# Cho phép ?ng d?ng frontend ReactJS c?a b?n (th??ng ch?y ? c?ng 3000) truy c?p API
# *L?u ý*: Thay ??i này trong ProductController.java c?ng c?n thi?t ho?c c?u hình Global CORS
# Xem ví d? trong ProductController: @CrossOrigin(origins = "http://localhost:3000")